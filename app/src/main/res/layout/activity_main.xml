<?xml version="1.0" encoding="utf-8"?>
<!--
  ~ Copyright (c) 2020. Herman Cheung
  ~
  ~ Licensed under the Apache License, Version 2.0 (the "License");
  ~ you may not use this file except in compliance with the License.
  ~ You may obtain a copy of the License at
  ~
  ~ http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
  ~
  ~
  -->

<layout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto">

    <data>
        <variable
            name="vm"
            type="io.hkhc.gossip.MainViewModel" />
    </data>

    <!--
       Activity shall invoke and setup AppBarDrawerToggle with this toolbar and drawerLayout
    -->
    <androidx.drawerlayout.widget.DrawerLayout
        android:id="@+id/drawer"
        android:layout_width="match_parent"
        android:layout_height="match_parent"
        >

        <androidx.coordinatorlayout.widget.CoordinatorLayout
            android:id="@+id/container"
            android:layout_width="match_parent"
            android:layout_height="match_parent"
            >
            <!--
                add the body here (ok to be by FragmentTransaction.add(container_id, fragment, tag)
                The body shall implements NestedScrollChild.
                e.g. RecyclerView, NestedScrollView, SwipeRefreshLayout etc

                It should have
                app:layout_behavior="@string/appbar_scrolling_view_behavior"

                Those NestedScrollChild-views work even if there are layers of view in between.
                So it is ok to have SwipeRefreshLayout between CoordinatorLayout and NestedScrollView.
            -->

            <!-- AppBarLayout should be direct child of CoordinatorLayout -->
            <com.google.android.material.appbar.AppBarLayout
                android:layout_width="match_parent"
                android:layout_height="wrap_content"
                >


                <!--
                    scrollFlags always be at the child of AppBarLayout, no matter it is
                    CollapsingToolbarLayout or Toolbar itself.

                    layout_scrollFlags: combination of the following:
                    scroll:
                        needed if toolbar is ever scrollable
                    enterAlways:
                        for scroll down
                        without it, scrolling view > toolbar,
                        with it, toolbar > scrolling view
                    enterAlwaysCollapsed:
                        for scroll down
                        toolbar (min) > scrolling view > toolbar (full)
                    exitUntilCollapsed:
                        for scroll up
                        toolbar (min) > scrolling view
                    snap:
                        if toolbar is partially scrolled when touch up, it will be snapped to
                        show or hide.
                -->

                <!--
                   CollapsingToolbarLayout is here to wrap toolbar, and we may have more child
                   in CollapsingToolbarLayout.
                   The scrollFlags should be there, and the child (i.e. toolbar
                   itself) shall have

                   app:layout_collapseMode="..."

                   Children of CollapsingToolbarLayout shall have a collapseMode:

                   pin: it stay not scrolling until collapsing completed
                   parallax: if we have that add layout_collapseParallaxMultiplier too
                   off:

                   Activity shall invoke setSupportActionBar(toolbar) at onCreate, and setup
                   AppBarDrawerToggle with this toolbar and drawerLayout

               -->

                <com.google.android.material.appbar.MaterialToolbar
                    android:id="@+id/toolbar"
                    android:layout_width="match_parent"
                    android:layout_height="?android:attr/actionBarSize"
                    app:layout_scrollFlags="scroll|enterAlways"
                    />

            </com.google.android.material.appbar.AppBarLayout>

        </androidx.coordinatorlayout.widget.CoordinatorLayout>

        <!--
            HeaderLayout shall be setup in code, otherwise data binding to header view won't work
        -->
        <com.google.android.material.navigation.NavigationView
            android:id="@+id/navigation"
            android:layout_width="wrap_content"
            android:layout_height="match_parent"
            android:layout_gravity="start"
            app:itemIconTint="@color/colorOnSecondary"
            />
<!--        app:menu="@menu/menu_nav"-->

    </androidx.drawerlayout.widget.DrawerLayout>
</layout>
